#include "MY_MPU6050.h"
#include "Wire.h"
#include "Servo.h"

Servo sg90;
int servo_pin = 2;
MY_MPU6050 sensor;
int16_t ax, ay, az ;
int16_t gx, gy, gz ;
const int MPU_ADDR = 0x68; // I2C address of the MPU-6050. If AD0 pin is set to HIGH, the I2C address will be 0x69.

char tmp_str[7]; // temporary variable used in convert function

char* convert_int16_to_str(int16_t i) { // converts int16 to string. Moreover, resulting strings will have the same length in the debug monitor.
  sprintf(tmp_str, "%6d", i);
  return tmp_str;
}


void setup ( )
{
  sg90.attach ( servo_pin );
  Wire.begin ( );
  Serial.begin  (9600);
  Wire.beginTransmission(MPU_ADDR); // Begins a transmission to the I2C slave (GY-521 board)
  Wire.write(0x6B); // PWR_MGMT_1 register
  Wire.write(0); // set to zero (wakes up the MPU-6050)
  Wire.endTransmission(true);
  delay (1000);
}

void loop ( )
{
  sensor.getMotion6(MPU_ADDR);
  ax = sensor.accelerometer_x;
  ax = map (ax, -17000, 17000, 0, 180) ;
  Serial.println (ax);
  sg90.write (ax);
  delay (200);
